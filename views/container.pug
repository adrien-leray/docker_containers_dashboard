extends header.pug

block content
    div(style="display: flex")
        a(class="button is-info" href="/containers" style="margin:0 10px 0 0")
            i(class="fas fa-arrow-left")
        form(action="/containers/"+ id + "/stop"  method="post" style="margin:0 10px 0 0")
            button(class="button is-warning" type="submit" value="stop")
                i(class="fas fa-stop" style="margin:0 5px 0 0")
                span stop
        form(action="/containers/"+ id + "/remove" method="post" style="margin:0 10px 0 0")
            button(class="button is-danger" type="submit" value="remove")
                i(class="fas fa-trash-alt" style="margin:0 5px 0 0")
                span remove
    div(style="padding: 10px 0 0 0")
        div(class="card")
            div(class="card-content")
                div(class="media")
                    div(class="media-left")
                        if (container.State.Status === "running")
                            i(class="fas fa-power-off fa-4x has-text-success")
                        else
                            i(class="fas fa-power-off fa-4x has-text-danger")
                    div(class="media-content")
                        p(class="title is-4") #{container.Name.substr(1)} 
                            small(class="is-size-6")
                                if (container.State.Status === "running")
                                    i(class="has-text-success") #{container.State.Status}
                                else
                                    i(class="has-text-danger") #{container.State.Status}
                        p(class="subtitle is-6") #{container.Path}
                div(class="content")
                    div(class="columns")
                        div(class="column")
                            p 
                                i created on 
                                b #{createdOn} 
                                i at 
                                b #{createdTime}
                            p 
                                i started on 
                                b #{startedOn} 
                                i at 
                                b #{startedTime}
                            if (container.State.Status !== "running")
                                p 
                                    i finished on 
                                    b #{finishedOn} 
                                    i at 
                                    b #{finishedTime}
                        div(class="column")
                            p 
                                b(style="padding-right: 5px") Memory Limit 
                                span #{parseInt(container.HostConfig.Memory) / Math.pow(10, 6)} Mb
                            p 
                                b(style="padding-right: 5px") CPU Period (ms)
                                span #{parseInt(container.HostConfig.CpuPeriod) / Math.pow(10, 3)} microseconds
                            p 
                                b(style="padding-right: 5px") CPU Quota (ms)
                                span #{parseInt(container.HostConfig.CpuQuota) / Math.pow(10, 3)} microseconds
    div(style="padding: 10px 0 0 0")
        div(class="columns")
            div(class="column")
                div(class="card" style="padding: 10px")
                    h2 
                        b(class="has-text-weight-bold") Docker Volume - Host Volume
                    div
                        each path in container.HostConfig.Binds
                            p= path

            div(class="column")
                div(class="card" style="padding: 10px")
                    h2 
                        b Container port - Host Port
                    div
                        each val in ports
                            p= val
    div(style="padding: 10px 0 0 0")
        div(class="card" style="padding: 10px")
            h2 
                b(class="has-text-weight-bold") Environment variables
            div
                each variable in container.Config.Env
                    p= variable
    div(style="padding: 10px 0 0 0")
        div(class="panel")
            p(class="panel-heading has-text-weight-bold") Logs
            div(class="panel-block has-background-dark")
                p(class="has-text-light" id="logs") #{logs}

        
                            